/*
 * Pulze.ai API
 * At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.FilterLogsRequest;
import com.konfigthis.client.model.GetTableSortParams;
import com.konfigthis.client.model.LogResponseRatingRequest;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.RequestNormalized;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LogsApi
 */
@Disabled
public class LogsApiTest {

    private static LogsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new LogsApi(apiClient);
    }

    /**
     * Get Log By Id
     *
     * Get a specific log by id. If accessing via API Key, this endpoint will only return a log if it belongs to that App. If the log&#39;s App is disabled, this endpoint won&#39;t return it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        UUID logId = null;
        RequestNormalized response = api.getById(logId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Logs For App
     *
     * Get the list of logs that match the specified filters. When accessing via an App&#39;s API Key, only logs for that app will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMatchingLogsTest() throws ApiException {
        OffsetDateTime dateFrom = null;
        List<UUID> appIds = null;
        OffsetDateTime dateTo = null;
        Map<String, String> labels = null;
        List<GetTableSortParams> params = null;
        String query = null;
        Integer page = null;
        Integer size = null;
        Object response = api.getMatchingLogs(dateFrom)
                .appIds(appIds)
                .dateTo(dateTo)
                .labels(labels)
                .params(params)
                .query(query)
                .page(page)
                .size(size)
                .execute();
        // TODO: test validations
    }

    /**
     * Rate Log By Id
     *
     * Rate a specific request by its ID. When accessing it via an App&#39;s API Key, this endpoint will only allow rating a log of that specific app.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rateByIdTest() throws ApiException {
        UUID logId = null;
        String feedback = null;
        Boolean goodAnswer = null;
        RequestNormalized response = api.rateById(logId)
                .feedback(feedback)
                .goodAnswer(goodAnswer)
                .execute();
        // TODO: test validations
    }

}

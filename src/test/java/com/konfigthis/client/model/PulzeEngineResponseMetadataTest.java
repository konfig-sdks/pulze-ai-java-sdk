/*
 * Pulze.ai API
 * At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ModelParts;
import com.konfigthis.client.model.PulzeEngineTokens;
import com.konfigthis.client.model.RankedScoringModels;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PulzeEngineResponseMetadata
 */
public class PulzeEngineResponseMetadataTest {
    private final PulzeEngineResponseMetadata model = new PulzeEngineResponseMetadata();

    /**
     * Model tests for PulzeEngineResponseMetadata
     */
    @Test
    public void testPulzeEngineResponseMetadata() {
        // TODO: test PulzeEngineResponseMetadata
    }

    /**
     * Test the property 'appId'
     */
    @Test
    public void appIdTest() {
        // TODO: test appId
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'costSavings'
     */
    @Test
    public void costSavingsTest() {
        // TODO: test costSavings
    }

    /**
     * Test the property 'costs'
     */
    @Test
    public void costsTest() {
        // TODO: test costs
    }

    /**
     * Test the property 'error'
     */
    @Test
    public void errorTest() {
        // TODO: test error
    }

    /**
     * Test the property 'extra'
     */
    @Test
    public void extraTest() {
        // TODO: test extra
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'latency'
     */
    @Test
    public void latencyTest() {
        // TODO: test latency
    }

    /**
     * Test the property 'maxTokens'
     */
    @Test
    public void maxTokensTest() {
        // TODO: test maxTokens
    }

    /**
     * Test the property 'model'
     */
    @Test
    public void modelTest() {
        // TODO: test model
    }

    /**
     * Test the property 'retries'
     */
    @Test
    public void retriesTest() {
        // TODO: test retries
    }

    /**
     * Test the property 'score'
     */
    @Test
    public void scoreTest() {
        // TODO: test score
    }

    /**
     * Test the property 'scores'
     */
    @Test
    public void scoresTest() {
        // TODO: test scores
    }

    /**
     * Test the property 'statusCode'
     */
    @Test
    public void statusCodeTest() {
        // TODO: test statusCode
    }

    /**
     * Test the property 'temperature'
     */
    @Test
    public void temperatureTest() {
        // TODO: test temperature
    }

}

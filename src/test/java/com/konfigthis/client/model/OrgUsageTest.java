/*
 * Pulze.ai API
 * At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for OrgUsage
 */
public class OrgUsageTest {
    private final OrgUsage model = new OrgUsage();

    /**
     * Model tests for OrgUsage
     */
    @Test
    public void testOrgUsage() {
        // TODO: test OrgUsage
    }

    /**
     * Test the property 'completionTokens'
     */
    @Test
    public void completionTokensTest() {
        // TODO: test completionTokens
    }

    /**
     * Test the property 'completionTokensCost'
     */
    @Test
    public void completionTokensCostTest() {
        // TODO: test completionTokensCost
    }

    /**
     * Test the property 'completionTokensCostSavings'
     */
    @Test
    public void completionTokensCostSavingsTest() {
        // TODO: test completionTokensCostSavings
    }

    /**
     * Test the property 'numApps'
     */
    @Test
    public void numAppsTest() {
        // TODO: test numApps
    }

    /**
     * Test the property 'numRequests'
     */
    @Test
    public void numRequestsTest() {
        // TODO: test numRequests
    }

    /**
     * Test the property 'orgId'
     */
    @Test
    public void orgIdTest() {
        // TODO: test orgId
    }

    /**
     * Test the property 'promptTokens'
     */
    @Test
    public void promptTokensTest() {
        // TODO: test promptTokens
    }

    /**
     * Test the property 'promptTokensCost'
     */
    @Test
    public void promptTokensCostTest() {
        // TODO: test promptTokensCost
    }

    /**
     * Test the property 'promptTokensCostSavings'
     */
    @Test
    public void promptTokensCostSavingsTest() {
        // TODO: test promptTokensCostSavings
    }

    /**
     * Test the property 'totalTokens'
     */
    @Test
    public void totalTokensTest() {
        // TODO: test totalTokens
    }

    /**
     * Test the property 'totalTokensCost'
     */
    @Test
    public void totalTokensCostTest() {
        // TODO: test totalTokensCost
    }

    /**
     * Test the property 'totalTokensCostSavings'
     */
    @Test
    public void totalTokensCostSavingsTest() {
        // TODO: test totalTokensCostSavings
    }

}

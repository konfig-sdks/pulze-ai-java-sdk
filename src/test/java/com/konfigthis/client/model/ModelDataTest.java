/*
 * Pulze.ai API
 * At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ModelData
 */
public class ModelDataTest {
    private final ModelData model = new ModelData();

    /**
     * Model tests for ModelData
     */
    @Test
    public void testModelData() {
        // TODO: test ModelData
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'addedBy'
     */
    @Test
    public void addedByTest() {
        // TODO: test addedBy
    }

    /**
     * Test the property 'addedOn'
     */
    @Test
    public void addedOnTest() {
        // TODO: test addedOn
    }

    /**
     * Test the property 'appId'
     */
    @Test
    public void appIdTest() {
        // TODO: test appId
    }

    /**
     * Test the property 'at'
     */
    @Test
    public void atTest() {
        // TODO: test at
    }

    /**
     * Test the property 'baseCost'
     */
    @Test
    public void baseCostTest() {
        // TODO: test baseCost
    }

    /**
     * Test the property 'completionTokenCost'
     */
    @Test
    public void completionTokenCostTest() {
        // TODO: test completionTokenCost
    }

    /**
     * Test the property 'contextWindow'
     */
    @Test
    public void contextWindowTest() {
        // TODO: test contextWindow
    }

    /**
     * Test the property 'defaultActive'
     */
    @Test
    public void defaultActiveTest() {
        // TODO: test defaultActive
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isChat'
     */
    @Test
    public void isChatTest() {
        // TODO: test isChat
    }

    /**
     * Test the property 'isFt'
     */
    @Test
    public void isFtTest() {
        // TODO: test isFt
    }

    /**
     * Test the property 'isGdpr'
     */
    @Test
    public void isGdprTest() {
        // TODO: test isGdpr
    }

    /**
     * Test the property 'isOpenSource'
     */
    @Test
    public void isOpenSourceTest() {
        // TODO: test isOpenSource
    }

    /**
     * Test the property 'isPublic'
     */
    @Test
    public void isPublicTest() {
        // TODO: test isPublic
    }

    /**
     * Test the property 'isPulzeOwner'
     */
    @Test
    public void isPulzeOwnerTest() {
        // TODO: test isPulzeOwner
    }

    /**
     * Test the property 'isRag'
     */
    @Test
    public void isRagTest() {
        // TODO: test isRag
    }

    /**
     * Test the property 'model'
     */
    @Test
    public void modelTest() {
        // TODO: test model
    }

    /**
     * Test the property 'modifiedOn'
     */
    @Test
    public void modifiedOnTest() {
        // TODO: test modifiedOn
    }

    /**
     * Test the property 'namespace'
     */
    @Test
    public void namespaceTest() {
        // TODO: test namespace
    }

    /**
     * Test the property 'orgId'
     */
    @Test
    public void orgIdTest() {
        // TODO: test orgId
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'promptTokenCost'
     */
    @Test
    public void promptTokenCostTest() {
        // TODO: test promptTokenCost
    }

    /**
     * Test the property 'provider'
     */
    @Test
    public void providerTest() {
        // TODO: test provider
    }

    /**
     * Test the property 'supportsFunctions'
     */
    @Test
    public void supportsFunctionsTest() {
        // TODO: test supportsFunctions
    }

    /**
     * Test the property 'supportsJson'
     */
    @Test
    public void supportsJsonTest() {
        // TODO: test supportsJson
    }

    /**
     * Test the property 'supportsN'
     */
    @Test
    public void supportsNTest() {
        // TODO: test supportsN
    }

    /**
     * Test the property 'supportsPenalties'
     */
    @Test
    public void supportsPenaltiesTest() {
        // TODO: test supportsPenalties
    }

    /**
     * Test the property 'supportsStream'
     */
    @Test
    public void supportsStreamTest() {
        // TODO: test supportsStream
    }

    /**
     * Test the property 'until'
     */
    @Test
    public void untilTest() {
        // TODO: test until
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

}

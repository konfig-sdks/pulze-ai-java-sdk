/*
 * Pulze.ai API
 * At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Org;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for UserOrgAccess
 */
public class UserOrgAccessTest {
    private final UserOrgAccess model = new UserOrgAccess();

    /**
     * Model tests for UserOrgAccess
     */
    @Test
    public void testUserOrgAccess() {
        // TODO: test UserOrgAccess
    }

    /**
     * Test the property 'auth0Id'
     */
    @Test
    public void auth0IdTest() {
        // TODO: test auth0Id
    }

    /**
     * Test the property 'billingEmail'
     */
    @Test
    public void billingEmailTest() {
        // TODO: test billingEmail
    }

    /**
     * Test the property 'fullName'
     */
    @Test
    public void fullNameTest() {
        // TODO: test fullName
    }

    /**
     * Test the property 'isOrgSetupComplete'
     */
    @Test
    public void isOrgSetupCompleteTest() {
        // TODO: test isOrgSetupComplete
    }

    /**
     * Test the property 'isPersonalOrg'
     */
    @Test
    public void isPersonalOrgTest() {
        // TODO: test isPersonalOrg
    }

    /**
     * Test the property 'memberIsActive'
     */
    @Test
    public void memberIsActiveTest() {
        // TODO: test memberIsActive
    }

    /**
     * Test the property 'org'
     */
    @Test
    public void orgTest() {
        // TODO: test org
    }

    /**
     * Test the property 'orgDisplayName'
     */
    @Test
    public void orgDisplayNameTest() {
        // TODO: test orgDisplayName
    }

    /**
     * Test the property 'orgId'
     */
    @Test
    public void orgIdTest() {
        // TODO: test orgId
    }

    /**
     * Test the property 'orgName'
     */
    @Test
    public void orgNameTest() {
        // TODO: test orgName
    }

    /**
     * Test the property 'orgStripeId'
     */
    @Test
    public void orgStripeIdTest() {
        // TODO: test orgStripeId
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'userAvatar'
     */
    @Test
    public void userAvatarTest() {
        // TODO: test userAvatar
    }

}

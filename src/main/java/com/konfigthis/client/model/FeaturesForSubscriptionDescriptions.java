/*
 * Pulze.ai API
 * At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * See FeaturesForSubscription for more info! This class is a duplicate so if anything gets renamed on the parent class, this one will error.
 */
@ApiModel(description = "See FeaturesForSubscription for more info! This class is a duplicate so if anything gets renamed on the parent class, this one will error.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class FeaturesForSubscriptionDescriptions {
  public static final String SERIALIZED_NAME_CUSTOMER_SUCCESS = "customer_success";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SUCCESS)
  private String customerSuccess;

  public static final String SERIALIZED_NAME_FINE_TUNING = "fine_tuning";
  @SerializedName(SERIALIZED_NAME_FINE_TUNING)
  private String fineTuning;

  public static final String SERIALIZED_NAME_FLOWZ = "flowz";
  @SerializedName(SERIALIZED_NAME_FLOWZ)
  private String flowz;

  public static final String SERIALIZED_NAME_LLM_ROUTING = "llm_routing";
  @SerializedName(SERIALIZED_NAME_LLM_ROUTING)
  private String llmRouting;

  public static final String SERIALIZED_NAME_MAX_APPS_READABLE = "max_apps_readable";
  @SerializedName(SERIALIZED_NAME_MAX_APPS_READABLE)
  private String maxAppsReadable;

  public static final String SERIALIZED_NAME_MAX_TOKENS_READABLE = "max_tokens_readable";
  @SerializedName(SERIALIZED_NAME_MAX_TOKENS_READABLE)
  private String maxTokensReadable;

  public static final String SERIALIZED_NAME_PERSONALIZED_LLM_ROUTING = "personalized_llm_routing";
  @SerializedName(SERIALIZED_NAME_PERSONALIZED_LLM_ROUTING)
  private String personalizedLlmRouting;

  public static final String SERIALIZED_NAME_PROMPT_MODELS = "prompt_models";
  @SerializedName(SERIALIZED_NAME_PROMPT_MODELS)
  private String promptModels;

  public static final String SERIALIZED_NAME_PROMPTS = "prompts";
  @SerializedName(SERIALIZED_NAME_PROMPTS)
  private String prompts;

  public static final String SERIALIZED_NAME_SUPPORT_LEVEL_READABLE = "support_level_readable";
  @SerializedName(SERIALIZED_NAME_SUPPORT_LEVEL_READABLE)
  private String supportLevelReadable;

  public FeaturesForSubscriptionDescriptions() {
  }

  public FeaturesForSubscriptionDescriptions customerSuccess(String customerSuccess) {
    
    
    
    
    this.customerSuccess = customerSuccess;
    return this;
  }

   /**
   * Get customerSuccess
   * @return customerSuccess
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCustomerSuccess() {
    return customerSuccess;
  }


  public void setCustomerSuccess(String customerSuccess) {
    
    
    
    this.customerSuccess = customerSuccess;
  }


  public FeaturesForSubscriptionDescriptions fineTuning(String fineTuning) {
    
    
    
    
    this.fineTuning = fineTuning;
    return this;
  }

   /**
   * Get fineTuning
   * @return fineTuning
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getFineTuning() {
    return fineTuning;
  }


  public void setFineTuning(String fineTuning) {
    
    
    
    this.fineTuning = fineTuning;
  }


  public FeaturesForSubscriptionDescriptions flowz(String flowz) {
    
    
    
    
    this.flowz = flowz;
    return this;
  }

   /**
   * Get flowz
   * @return flowz
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getFlowz() {
    return flowz;
  }


  public void setFlowz(String flowz) {
    
    
    
    this.flowz = flowz;
  }


  public FeaturesForSubscriptionDescriptions llmRouting(String llmRouting) {
    
    
    
    
    this.llmRouting = llmRouting;
    return this;
  }

   /**
   * Get llmRouting
   * @return llmRouting
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getLlmRouting() {
    return llmRouting;
  }


  public void setLlmRouting(String llmRouting) {
    
    
    
    this.llmRouting = llmRouting;
  }


  public FeaturesForSubscriptionDescriptions maxAppsReadable(String maxAppsReadable) {
    
    
    
    
    this.maxAppsReadable = maxAppsReadable;
    return this;
  }

   /**
   * Get maxAppsReadable
   * @return maxAppsReadable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getMaxAppsReadable() {
    return maxAppsReadable;
  }


  public void setMaxAppsReadable(String maxAppsReadable) {
    
    
    
    this.maxAppsReadable = maxAppsReadable;
  }


  public FeaturesForSubscriptionDescriptions maxTokensReadable(String maxTokensReadable) {
    
    
    
    
    this.maxTokensReadable = maxTokensReadable;
    return this;
  }

   /**
   * Get maxTokensReadable
   * @return maxTokensReadable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getMaxTokensReadable() {
    return maxTokensReadable;
  }


  public void setMaxTokensReadable(String maxTokensReadable) {
    
    
    
    this.maxTokensReadable = maxTokensReadable;
  }


  public FeaturesForSubscriptionDescriptions personalizedLlmRouting(String personalizedLlmRouting) {
    
    
    
    
    this.personalizedLlmRouting = personalizedLlmRouting;
    return this;
  }

   /**
   * Get personalizedLlmRouting
   * @return personalizedLlmRouting
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPersonalizedLlmRouting() {
    return personalizedLlmRouting;
  }


  public void setPersonalizedLlmRouting(String personalizedLlmRouting) {
    
    
    
    this.personalizedLlmRouting = personalizedLlmRouting;
  }


  public FeaturesForSubscriptionDescriptions promptModels(String promptModels) {
    
    
    
    
    this.promptModels = promptModels;
    return this;
  }

   /**
   * Get promptModels
   * @return promptModels
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPromptModels() {
    return promptModels;
  }


  public void setPromptModels(String promptModels) {
    
    
    
    this.promptModels = promptModels;
  }


  public FeaturesForSubscriptionDescriptions prompts(String prompts) {
    
    
    
    
    this.prompts = prompts;
    return this;
  }

   /**
   * Get prompts
   * @return prompts
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPrompts() {
    return prompts;
  }


  public void setPrompts(String prompts) {
    
    
    
    this.prompts = prompts;
  }


  public FeaturesForSubscriptionDescriptions supportLevelReadable(String supportLevelReadable) {
    
    
    
    
    this.supportLevelReadable = supportLevelReadable;
    return this;
  }

   /**
   * Get supportLevelReadable
   * @return supportLevelReadable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSupportLevelReadable() {
    return supportLevelReadable;
  }


  public void setSupportLevelReadable(String supportLevelReadable) {
    
    
    
    this.supportLevelReadable = supportLevelReadable;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FeaturesForSubscriptionDescriptions instance itself
   */
  public FeaturesForSubscriptionDescriptions putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeaturesForSubscriptionDescriptions featuresForSubscriptionDescriptions = (FeaturesForSubscriptionDescriptions) o;
    return Objects.equals(this.customerSuccess, featuresForSubscriptionDescriptions.customerSuccess) &&
        Objects.equals(this.fineTuning, featuresForSubscriptionDescriptions.fineTuning) &&
        Objects.equals(this.flowz, featuresForSubscriptionDescriptions.flowz) &&
        Objects.equals(this.llmRouting, featuresForSubscriptionDescriptions.llmRouting) &&
        Objects.equals(this.maxAppsReadable, featuresForSubscriptionDescriptions.maxAppsReadable) &&
        Objects.equals(this.maxTokensReadable, featuresForSubscriptionDescriptions.maxTokensReadable) &&
        Objects.equals(this.personalizedLlmRouting, featuresForSubscriptionDescriptions.personalizedLlmRouting) &&
        Objects.equals(this.promptModels, featuresForSubscriptionDescriptions.promptModels) &&
        Objects.equals(this.prompts, featuresForSubscriptionDescriptions.prompts) &&
        Objects.equals(this.supportLevelReadable, featuresForSubscriptionDescriptions.supportLevelReadable)&&
        Objects.equals(this.additionalProperties, featuresForSubscriptionDescriptions.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerSuccess, fineTuning, flowz, llmRouting, maxAppsReadable, maxTokensReadable, personalizedLlmRouting, promptModels, prompts, supportLevelReadable, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeaturesForSubscriptionDescriptions {\n");
    sb.append("    customerSuccess: ").append(toIndentedString(customerSuccess)).append("\n");
    sb.append("    fineTuning: ").append(toIndentedString(fineTuning)).append("\n");
    sb.append("    flowz: ").append(toIndentedString(flowz)).append("\n");
    sb.append("    llmRouting: ").append(toIndentedString(llmRouting)).append("\n");
    sb.append("    maxAppsReadable: ").append(toIndentedString(maxAppsReadable)).append("\n");
    sb.append("    maxTokensReadable: ").append(toIndentedString(maxTokensReadable)).append("\n");
    sb.append("    personalizedLlmRouting: ").append(toIndentedString(personalizedLlmRouting)).append("\n");
    sb.append("    promptModels: ").append(toIndentedString(promptModels)).append("\n");
    sb.append("    prompts: ").append(toIndentedString(prompts)).append("\n");
    sb.append("    supportLevelReadable: ").append(toIndentedString(supportLevelReadable)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customer_success");
    openapiFields.add("fine_tuning");
    openapiFields.add("flowz");
    openapiFields.add("llm_routing");
    openapiFields.add("max_apps_readable");
    openapiFields.add("max_tokens_readable");
    openapiFields.add("personalized_llm_routing");
    openapiFields.add("prompt_models");
    openapiFields.add("prompts");
    openapiFields.add("support_level_readable");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("customer_success");
    openapiRequiredFields.add("fine_tuning");
    openapiRequiredFields.add("flowz");
    openapiRequiredFields.add("llm_routing");
    openapiRequiredFields.add("max_apps_readable");
    openapiRequiredFields.add("max_tokens_readable");
    openapiRequiredFields.add("personalized_llm_routing");
    openapiRequiredFields.add("prompt_models");
    openapiRequiredFields.add("prompts");
    openapiRequiredFields.add("support_level_readable");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FeaturesForSubscriptionDescriptions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FeaturesForSubscriptionDescriptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FeaturesForSubscriptionDescriptions is not found in the empty JSON string", FeaturesForSubscriptionDescriptions.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : FeaturesForSubscriptionDescriptions.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("customer_success").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_success` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_success").toString()));
      }
      if (!jsonObj.get("fine_tuning").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fine_tuning` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fine_tuning").toString()));
      }
      if (!jsonObj.get("flowz").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flowz` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flowz").toString()));
      }
      if (!jsonObj.get("llm_routing").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `llm_routing` to be a primitive type in the JSON string but got `%s`", jsonObj.get("llm_routing").toString()));
      }
      if (!jsonObj.get("max_apps_readable").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `max_apps_readable` to be a primitive type in the JSON string but got `%s`", jsonObj.get("max_apps_readable").toString()));
      }
      if (!jsonObj.get("max_tokens_readable").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `max_tokens_readable` to be a primitive type in the JSON string but got `%s`", jsonObj.get("max_tokens_readable").toString()));
      }
      if (!jsonObj.get("personalized_llm_routing").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalized_llm_routing` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalized_llm_routing").toString()));
      }
      if (!jsonObj.get("prompt_models").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prompt_models` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prompt_models").toString()));
      }
      if (!jsonObj.get("prompts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prompts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prompts").toString()));
      }
      if (!jsonObj.get("support_level_readable").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `support_level_readable` to be a primitive type in the JSON string but got `%s`", jsonObj.get("support_level_readable").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FeaturesForSubscriptionDescriptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FeaturesForSubscriptionDescriptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FeaturesForSubscriptionDescriptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FeaturesForSubscriptionDescriptions.class));

       return (TypeAdapter<T>) new TypeAdapter<FeaturesForSubscriptionDescriptions>() {
           @Override
           public void write(JsonWriter out, FeaturesForSubscriptionDescriptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FeaturesForSubscriptionDescriptions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FeaturesForSubscriptionDescriptions instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FeaturesForSubscriptionDescriptions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FeaturesForSubscriptionDescriptions
  * @throws IOException if the JSON string is invalid with respect to FeaturesForSubscriptionDescriptions
  */
  public static FeaturesForSubscriptionDescriptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FeaturesForSubscriptionDescriptions.class);
  }

 /**
  * Convert an instance of FeaturesForSubscriptionDescriptions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


/*
 * Pulze.ai API
 * At Pulze it's our mission to supercharge today's workforce with AI to maximize the world's prosperity. We are doing so by enabling companies of any size to securely leverage Large Language Models (LLM) and easily build AI features into their apps. Our enterprise platform has access to all best in class LLMs and can route user requests to the most relevant model to get the highest quality response at the best price thanks to our smart meta model. End users can leverage pre-built applications, such as our Marketing AI product, or build custom apps on top of the Pulze Platform.  We are a VC Funded, early stage startup based in San Francisco.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * For any given subscription, this represents the set of available features
 */
@ApiModel(description = "For any given subscription, this represents the set of available features")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SubscriptionSettings {
  public static final String SERIALIZED_NAME_CUSTOMER_SUCCESS = "customer_success";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_SUCCESS)
  private Boolean customerSuccess;

  public static final String SERIALIZED_NAME_FINE_TUNING = "fine_tuning";
  @SerializedName(SERIALIZED_NAME_FINE_TUNING)
  private Boolean fineTuning;

  public static final String SERIALIZED_NAME_FLOWZ = "flowz";
  @SerializedName(SERIALIZED_NAME_FLOWZ)
  private Boolean flowz = true;

  public static final String SERIALIZED_NAME_LLM_ROUTING = "llm_routing";
  @SerializedName(SERIALIZED_NAME_LLM_ROUTING)
  private Boolean llmRouting = true;

  public static final String SERIALIZED_NAME_MAX_APPS = "max_apps";
  @SerializedName(SERIALIZED_NAME_MAX_APPS)
  private Integer maxApps;

  public static final String SERIALIZED_NAME_MAX_APPS_READABLE = "max_apps_readable";
  @SerializedName(SERIALIZED_NAME_MAX_APPS_READABLE)
  private String maxAppsReadable;

  public static final String SERIALIZED_NAME_MAX_TOKENS = "max_tokens";
  @SerializedName(SERIALIZED_NAME_MAX_TOKENS)
  private Integer maxTokens;

  public static final String SERIALIZED_NAME_MAX_TOKENS_READABLE = "max_tokens_readable";
  @SerializedName(SERIALIZED_NAME_MAX_TOKENS_READABLE)
  private String maxTokensReadable;

  public static final String SERIALIZED_NAME_MONTHLY_PRICE_ID = "monthly_price_id";
  @SerializedName(SERIALIZED_NAME_MONTHLY_PRICE_ID)
  private String monthlyPriceId;

  public static final String SERIALIZED_NAME_MONTHLY_PRICE_USD = "monthly_price_usd";
  @SerializedName(SERIALIZED_NAME_MONTHLY_PRICE_USD)
  private Double monthlyPriceUsd;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERSONALIZED_LLM_ROUTING = "personalized_llm_routing";
  @SerializedName(SERIALIZED_NAME_PERSONALIZED_LLM_ROUTING)
  private Boolean personalizedLlmRouting;

  public static final String SERIALIZED_NAME_PROMPT_MODELS = "prompt_models";
  @SerializedName(SERIALIZED_NAME_PROMPT_MODELS)
  private Boolean promptModels;

  public static final String SERIALIZED_NAME_PROMPTS = "prompts";
  @SerializedName(SERIALIZED_NAME_PROMPTS)
  private Boolean prompts;

  /**
   * The level of support this user has access to
   */
  @JsonAdapter(SupportLevelEnum.Adapter.class)
 public enum SupportLevelEnum {
    COMMUNITY("community"),
    
    ALL("all");

    private String value;

    SupportLevelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SupportLevelEnum fromValue(String value) {
      for (SupportLevelEnum b : SupportLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SupportLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SupportLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SupportLevelEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SupportLevelEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SUPPORT_LEVEL = "support_level";
  @SerializedName(SERIALIZED_NAME_SUPPORT_LEVEL)
  private SupportLevelEnum supportLevel;

  public static final String SERIALIZED_NAME_SUPPORT_LEVEL_READABLE = "support_level_readable";
  @SerializedName(SERIALIZED_NAME_SUPPORT_LEVEL_READABLE)
  private String supportLevelReadable;

  public static final String SERIALIZED_NAME_YEARLY_PRICE_ID = "yearly_price_id";
  @SerializedName(SERIALIZED_NAME_YEARLY_PRICE_ID)
  private String yearlyPriceId;

  public static final String SERIALIZED_NAME_YEARLY_PRICE_USD = "yearly_price_usd";
  @SerializedName(SERIALIZED_NAME_YEARLY_PRICE_USD)
  private Double yearlyPriceUsd;

  public SubscriptionSettings() {
  }

  public SubscriptionSettings customerSuccess(Boolean customerSuccess) {
    
    
    
    
    this.customerSuccess = customerSuccess;
    return this;
  }

   /**
   * Support from Marketing team (? TBD)
   * @return customerSuccess
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Support from Marketing team (? TBD)")

  public Boolean getCustomerSuccess() {
    return customerSuccess;
  }


  public void setCustomerSuccess(Boolean customerSuccess) {
    
    
    
    this.customerSuccess = customerSuccess;
  }


  public SubscriptionSettings fineTuning(Boolean fineTuning) {
    
    
    
    
    this.fineTuning = fineTuning;
    return this;
  }

   /**
   * Allows to fine-tune models
   * @return fineTuning
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Allows to fine-tune models")

  public Boolean getFineTuning() {
    return fineTuning;
  }


  public void setFineTuning(Boolean fineTuning) {
    
    
    
    this.fineTuning = fineTuning;
  }


  public SubscriptionSettings flowz(Boolean flowz) {
    
    
    
    
    this.flowz = flowz;
    return this;
  }

   /**
   * Flowz Feature
   * @return flowz
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Flowz Feature")

  public Boolean getFlowz() {
    return flowz;
  }


  public void setFlowz(Boolean flowz) {
    
    
    
    this.flowz = flowz;
  }


  public SubscriptionSettings llmRouting(Boolean llmRouting) {
    
    
    
    
    this.llmRouting = llmRouting;
    return this;
  }

   /**
   * Dynamic LLM routing using KG
   * @return llmRouting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Dynamic LLM routing using KG")

  public Boolean getLlmRouting() {
    return llmRouting;
  }


  public void setLlmRouting(Boolean llmRouting) {
    
    
    
    this.llmRouting = llmRouting;
  }


  public SubscriptionSettings maxApps(Integer maxApps) {
    
    
    
    
    this.maxApps = maxApps;
    return this;
  }

   /**
   * Maximum number of apps that can be created
   * @return maxApps
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Maximum number of apps that can be created")

  public Integer getMaxApps() {
    return maxApps;
  }


  public void setMaxApps(Integer maxApps) {
    
    
    
    this.maxApps = maxApps;
  }


  public SubscriptionSettings maxAppsReadable(String maxAppsReadable) {
    
    
    
    
    this.maxAppsReadable = maxAppsReadable;
    return this;
  }

   /**
   * A human-readable format of max_apps. Example: &#39;Infinite&#39; or &#39;1000&#39; or &#39;None&#39;
   * @return maxAppsReadable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A human-readable format of max_apps. Example: 'Infinite' or '1000' or 'None'")

  public String getMaxAppsReadable() {
    return maxAppsReadable;
  }


  public void setMaxAppsReadable(String maxAppsReadable) {
    
    
    
    this.maxAppsReadable = maxAppsReadable;
  }


  public SubscriptionSettings maxTokens(Integer maxTokens) {
    
    
    
    
    this.maxTokens = maxTokens;
    return this;
  }

   /**
   * The maximum number of tokens that can be _generated_, for each billing period (month)
   * @return maxTokens
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The maximum number of tokens that can be _generated_, for each billing period (month)")

  public Integer getMaxTokens() {
    return maxTokens;
  }


  public void setMaxTokens(Integer maxTokens) {
    
    
    
    this.maxTokens = maxTokens;
  }


  public SubscriptionSettings maxTokensReadable(String maxTokensReadable) {
    
    
    
    
    this.maxTokensReadable = maxTokensReadable;
    return this;
  }

   /**
   * A human-readable format of max_tokens. Example: &#39;50bn&#39; or &#39;+100M&#39;
   * @return maxTokensReadable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A human-readable format of max_tokens. Example: '50bn' or '+100M'")

  public String getMaxTokensReadable() {
    return maxTokensReadable;
  }


  public void setMaxTokensReadable(String maxTokensReadable) {
    
    
    
    this.maxTokensReadable = maxTokensReadable;
  }


  public SubscriptionSettings monthlyPriceId(String monthlyPriceId) {
    
    
    
    
    this.monthlyPriceId = monthlyPriceId;
    return this;
  }

   /**
   * The Stripe PriceID for the monthly subscription
   * @return monthlyPriceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Stripe PriceID for the monthly subscription")

  public String getMonthlyPriceId() {
    return monthlyPriceId;
  }


  public void setMonthlyPriceId(String monthlyPriceId) {
    
    
    
    this.monthlyPriceId = monthlyPriceId;
  }


  public SubscriptionSettings monthlyPriceUsd(Double monthlyPriceUsd) {
    
    
    
    
    this.monthlyPriceUsd = monthlyPriceUsd;
    return this;
  }

  public SubscriptionSettings monthlyPriceUsd(Integer monthlyPriceUsd) {
    
    
    
    
    this.monthlyPriceUsd = monthlyPriceUsd.doubleValue();
    return this;
  }

   /**
   * Price per MONTH -- same as in Stripe, here for display purposes
   * @return monthlyPriceUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Price per MONTH -- same as in Stripe, here for display purposes")

  public Double getMonthlyPriceUsd() {
    return monthlyPriceUsd;
  }


  public void setMonthlyPriceUsd(Double monthlyPriceUsd) {
    
    
    
    this.monthlyPriceUsd = monthlyPriceUsd;
  }


  public SubscriptionSettings name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The name for this subscription
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name for this subscription")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public SubscriptionSettings personalizedLlmRouting(Boolean personalizedLlmRouting) {
    
    
    
    
    this.personalizedLlmRouting = personalizedLlmRouting;
    return this;
  }

   /**
   * Custom scoring of LLMs using KG
   * @return personalizedLlmRouting
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Custom scoring of LLMs using KG")

  public Boolean getPersonalizedLlmRouting() {
    return personalizedLlmRouting;
  }


  public void setPersonalizedLlmRouting(Boolean personalizedLlmRouting) {
    
    
    
    this.personalizedLlmRouting = personalizedLlmRouting;
  }


  public SubscriptionSettings promptModels(Boolean promptModels) {
    
    
    
    
    this.promptModels = promptModels;
    return this;
  }

   /**
   * Allows the user to create and use Prompt-based Models
   * @return promptModels
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Allows the user to create and use Prompt-based Models")

  public Boolean getPromptModels() {
    return promptModels;
  }


  public void setPromptModels(Boolean promptModels) {
    
    
    
    this.promptModels = promptModels;
  }


  public SubscriptionSettings prompts(Boolean prompts) {
    
    
    
    
    this.prompts = prompts;
    return this;
  }

   /**
   * Allows the user to create and use Prompts
   * @return prompts
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Allows the user to create and use Prompts")

  public Boolean getPrompts() {
    return prompts;
  }


  public void setPrompts(Boolean prompts) {
    
    
    
    this.prompts = prompts;
  }


  public SubscriptionSettings supportLevel(SupportLevelEnum supportLevel) {
    
    
    
    
    this.supportLevel = supportLevel;
    return this;
  }

   /**
   * The level of support this user has access to
   * @return supportLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The level of support this user has access to")

  public SupportLevelEnum getSupportLevel() {
    return supportLevel;
  }


  public void setSupportLevel(SupportLevelEnum supportLevel) {
    
    
    
    this.supportLevel = supportLevel;
  }


  public SubscriptionSettings supportLevelReadable(String supportLevelReadable) {
    
    
    
    
    this.supportLevelReadable = supportLevelReadable;
    return this;
  }

   /**
   * A human-readable format for the level of support offered
   * @return supportLevelReadable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A human-readable format for the level of support offered")

  public String getSupportLevelReadable() {
    return supportLevelReadable;
  }


  public void setSupportLevelReadable(String supportLevelReadable) {
    
    
    
    this.supportLevelReadable = supportLevelReadable;
  }


  public SubscriptionSettings yearlyPriceId(String yearlyPriceId) {
    
    
    
    
    this.yearlyPriceId = yearlyPriceId;
    return this;
  }

   /**
   * The Stripe PriceID for the yearly subscription
   * @return yearlyPriceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Stripe PriceID for the yearly subscription")

  public String getYearlyPriceId() {
    return yearlyPriceId;
  }


  public void setYearlyPriceId(String yearlyPriceId) {
    
    
    
    this.yearlyPriceId = yearlyPriceId;
  }


  public SubscriptionSettings yearlyPriceUsd(Double yearlyPriceUsd) {
    
    
    
    
    this.yearlyPriceUsd = yearlyPriceUsd;
    return this;
  }

  public SubscriptionSettings yearlyPriceUsd(Integer yearlyPriceUsd) {
    
    
    
    
    this.yearlyPriceUsd = yearlyPriceUsd.doubleValue();
    return this;
  }

   /**
   * Price per YEAR -- same as in Stripe, here for display purposes
   * @return yearlyPriceUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Price per YEAR -- same as in Stripe, here for display purposes")

  public Double getYearlyPriceUsd() {
    return yearlyPriceUsd;
  }


  public void setYearlyPriceUsd(Double yearlyPriceUsd) {
    
    
    
    this.yearlyPriceUsd = yearlyPriceUsd;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SubscriptionSettings instance itself
   */
  public SubscriptionSettings putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionSettings subscriptionSettings = (SubscriptionSettings) o;
    return Objects.equals(this.customerSuccess, subscriptionSettings.customerSuccess) &&
        Objects.equals(this.fineTuning, subscriptionSettings.fineTuning) &&
        Objects.equals(this.flowz, subscriptionSettings.flowz) &&
        Objects.equals(this.llmRouting, subscriptionSettings.llmRouting) &&
        Objects.equals(this.maxApps, subscriptionSettings.maxApps) &&
        Objects.equals(this.maxAppsReadable, subscriptionSettings.maxAppsReadable) &&
        Objects.equals(this.maxTokens, subscriptionSettings.maxTokens) &&
        Objects.equals(this.maxTokensReadable, subscriptionSettings.maxTokensReadable) &&
        Objects.equals(this.monthlyPriceId, subscriptionSettings.monthlyPriceId) &&
        Objects.equals(this.monthlyPriceUsd, subscriptionSettings.monthlyPriceUsd) &&
        Objects.equals(this.name, subscriptionSettings.name) &&
        Objects.equals(this.personalizedLlmRouting, subscriptionSettings.personalizedLlmRouting) &&
        Objects.equals(this.promptModels, subscriptionSettings.promptModels) &&
        Objects.equals(this.prompts, subscriptionSettings.prompts) &&
        Objects.equals(this.supportLevel, subscriptionSettings.supportLevel) &&
        Objects.equals(this.supportLevelReadable, subscriptionSettings.supportLevelReadable) &&
        Objects.equals(this.yearlyPriceId, subscriptionSettings.yearlyPriceId) &&
        Objects.equals(this.yearlyPriceUsd, subscriptionSettings.yearlyPriceUsd)&&
        Objects.equals(this.additionalProperties, subscriptionSettings.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerSuccess, fineTuning, flowz, llmRouting, maxApps, maxAppsReadable, maxTokens, maxTokensReadable, monthlyPriceId, monthlyPriceUsd, name, personalizedLlmRouting, promptModels, prompts, supportLevel, supportLevelReadable, yearlyPriceId, yearlyPriceUsd, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionSettings {\n");
    sb.append("    customerSuccess: ").append(toIndentedString(customerSuccess)).append("\n");
    sb.append("    fineTuning: ").append(toIndentedString(fineTuning)).append("\n");
    sb.append("    flowz: ").append(toIndentedString(flowz)).append("\n");
    sb.append("    llmRouting: ").append(toIndentedString(llmRouting)).append("\n");
    sb.append("    maxApps: ").append(toIndentedString(maxApps)).append("\n");
    sb.append("    maxAppsReadable: ").append(toIndentedString(maxAppsReadable)).append("\n");
    sb.append("    maxTokens: ").append(toIndentedString(maxTokens)).append("\n");
    sb.append("    maxTokensReadable: ").append(toIndentedString(maxTokensReadable)).append("\n");
    sb.append("    monthlyPriceId: ").append(toIndentedString(monthlyPriceId)).append("\n");
    sb.append("    monthlyPriceUsd: ").append(toIndentedString(monthlyPriceUsd)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    personalizedLlmRouting: ").append(toIndentedString(personalizedLlmRouting)).append("\n");
    sb.append("    promptModels: ").append(toIndentedString(promptModels)).append("\n");
    sb.append("    prompts: ").append(toIndentedString(prompts)).append("\n");
    sb.append("    supportLevel: ").append(toIndentedString(supportLevel)).append("\n");
    sb.append("    supportLevelReadable: ").append(toIndentedString(supportLevelReadable)).append("\n");
    sb.append("    yearlyPriceId: ").append(toIndentedString(yearlyPriceId)).append("\n");
    sb.append("    yearlyPriceUsd: ").append(toIndentedString(yearlyPriceUsd)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customer_success");
    openapiFields.add("fine_tuning");
    openapiFields.add("flowz");
    openapiFields.add("llm_routing");
    openapiFields.add("max_apps");
    openapiFields.add("max_apps_readable");
    openapiFields.add("max_tokens");
    openapiFields.add("max_tokens_readable");
    openapiFields.add("monthly_price_id");
    openapiFields.add("monthly_price_usd");
    openapiFields.add("name");
    openapiFields.add("personalized_llm_routing");
    openapiFields.add("prompt_models");
    openapiFields.add("prompts");
    openapiFields.add("support_level");
    openapiFields.add("support_level_readable");
    openapiFields.add("yearly_price_id");
    openapiFields.add("yearly_price_usd");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("customer_success");
    openapiRequiredFields.add("fine_tuning");
    openapiRequiredFields.add("max_apps");
    openapiRequiredFields.add("max_apps_readable");
    openapiRequiredFields.add("max_tokens");
    openapiRequiredFields.add("max_tokens_readable");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("personalized_llm_routing");
    openapiRequiredFields.add("prompt_models");
    openapiRequiredFields.add("prompts");
    openapiRequiredFields.add("support_level");
    openapiRequiredFields.add("support_level_readable");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SubscriptionSettings
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SubscriptionSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SubscriptionSettings is not found in the empty JSON string", SubscriptionSettings.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SubscriptionSettings.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("max_apps_readable").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `max_apps_readable` to be a primitive type in the JSON string but got `%s`", jsonObj.get("max_apps_readable").toString()));
      }
      if (!jsonObj.get("max_tokens_readable").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `max_tokens_readable` to be a primitive type in the JSON string but got `%s`", jsonObj.get("max_tokens_readable").toString()));
      }
      if ((jsonObj.get("monthly_price_id") != null && !jsonObj.get("monthly_price_id").isJsonNull()) && !jsonObj.get("monthly_price_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `monthly_price_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("monthly_price_id").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("support_level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `support_level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("support_level").toString()));
      }
      if (!jsonObj.get("support_level_readable").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `support_level_readable` to be a primitive type in the JSON string but got `%s`", jsonObj.get("support_level_readable").toString()));
      }
      if ((jsonObj.get("yearly_price_id") != null && !jsonObj.get("yearly_price_id").isJsonNull()) && !jsonObj.get("yearly_price_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `yearly_price_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("yearly_price_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SubscriptionSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SubscriptionSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SubscriptionSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SubscriptionSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<SubscriptionSettings>() {
           @Override
           public void write(JsonWriter out, SubscriptionSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SubscriptionSettings read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SubscriptionSettings instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SubscriptionSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SubscriptionSettings
  * @throws IOException if the JSON string is invalid with respect to SubscriptionSettings
  */
  public static SubscriptionSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SubscriptionSettings.class);
  }

 /**
  * Convert an instance of SubscriptionSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

